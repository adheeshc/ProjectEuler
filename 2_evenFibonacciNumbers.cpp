#include <iostream>
#include <cassert>
#include <vector>

/*
Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.
*/

int evenFibonnaciSum(int num){
    int sum = 0;
    int a = 1;
    int b = 2;
    int nextTerm = a+b;
    std::vector<int> fibo {a, b, nextTerm};
    while(nextTerm < num){
        a = b;
        b = nextTerm;
        nextTerm = a+b;
        fibo.emplace_back(nextTerm);
    }
    for(int i:fibo){
        if(i%2 == 0){
            sum+=i;
        }
    }

    return sum;
}

int main(){
   
    assert(evenFibonnaciSum(10) == 10);
    assert(evenFibonnaciSum(34) == 44);
    assert(evenFibonnaciSum(60) == 44);
    assert(evenFibonnaciSum(1000) == 798);
    assert(evenFibonnaciSum(100000) == 60696);
    assert(evenFibonnaciSum(4000000) == 4613732);

    std::cout<< "All Tests Passed" << std::endl;

    return 0;
}